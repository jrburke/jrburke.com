<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">

    <title><![CDATA[James Burke -- requirejs]]></title>
    <link href="http://jrburke.com/tags/requirejs//atom.xml" rel="self"/>
    <link href="http://jrburke.com/tags/requirejs/"/>
    <updated>2013-03-04T07:41:27.338Z</updated>
    <id>http://jrburke.com/tags/requirejs/</id>
    <author>
    <name><![CDATA[James Burke]]></name>
    </author>

    <entry>
        <title type="html"><![CDATA[RequireJS 2.1.5 Released]]></title>
        <link href="http://jrburke.com/2013/03/03/requirejs-2.1.5-released/"/>
        <updated>2013-03-04T07:41:27.338Z</updated>
        <id>http://jrburke.com/2013/03/03/requirejs-2.1.5-released/</id>
        <content type="html"><![CDATA[<p><a href="http://www.requirejs.org/docs/download.html">RequireJS 2.1.5 is available</a>.</p>

<p>Biggest change is support for running the optimizer and loading AMD modules in
<a href="https://developer.mozilla.org/en-US/docs/XPConnect/xpcshell">xpcshell</a>. It is a bit tricky to get xpcshell on your machine. It normally means creating a debug build of Firefox. But if you have a build or test environment built around xpcshell, RequireJS and the optimizer now run in that environment.</p>

<p>I tried to get <a href="https://github.com/jrburke/r.js/issues/201">r.js to work in Windows Script Host</a>, but unfortunately, cscript is too limited to be useful.</p>

<p>If someone else knows how to run JS on the Windows command line that has access to file IO natively on Windows, please let me know in that issue. However, if it means downloading some sort of binary, I am more likely to discard that approach and encourage developers to take the already available node path for Windows.</p>

<p>Similarly, I wish <a href="https://trac.webkit.org/wiki/JSC">JSC</a> on OS X had a way to access the file system. If it did, it would be easy to write an adapter for it. However, JSC seems limited to just stdin/stdout.</p>

<p>Full list of changes for 2.1.5:</p>

<ul>
<li><a href="https://github.com/jrburke/requirejs/issues?direction=desc&amp;milestone=26&amp;sort=created&amp;state=closed">Fixed require.js issues</a></li>
<li><a href="https://github.com/jrburke/r.js/issues?milestone=23&amp;state=closed">Fixed r.js optimizer issues</a></li>
</ul>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[RequireJS 2.1.4 Released]]></title>
        <link href="http://jrburke.com/2013/01/23/requirejs-2.1.4-released/"/>
        <updated>2013-01-24T02:08:26.417Z</updated>
        <id>http://jrburke.com/2013/01/23/requirejs-2.1.4-released/</id>
        <content type="html"><![CDATA[<p><a href="http://www.requirejs.org/docs/download.html">RequireJS 2.1.4 is available</a>.</p>

<p>Quick release for a bug that slipped in the 2.1.3 release in the r.js optimizer. So even though require.js now has a 2.1.4 version, it is the same as 2.1.3, and the optimizer is the same as 2.1.3 except for this one fix:</p>

<ul>
<li><a href="https://github.com/jrburke/r.js/issues/356">Bug 356</a>: cssPrefix normalization always needs to happen</li>
</ul>

<p>Without this fix, in some cases 2.1.3 would insert "undefined" in some optimized CSS files, making them unusable.</p>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[RequireJS 2.1.3 Released]]></title>
        <link href="http://jrburke.com/2013/01/22/requirejs-2.1.3-released/"/>
        <updated>2013-01-22T18:31:12.519Z</updated>
        <id>http://jrburke.com/2013/01/22/requirejs-2.1.3-released/</id>
        <content type="html"><![CDATA[<p><a href="http://www.requirejs.org/docs/download.html">RequireJS 2.1.3 is available</a>.</p>

<p>Maintenance release. A change that may be noticeable:</p>

<p><a href="http://requirejs.org/docs/api.html#modulenotes-urls">require.toUrl()</a> now correctly generates URLs for string values passed to it without an extension. Previous versions of toUrl() would append a ".js" extension automatically. If you relied on that behavior, when you update to 2.1.3, then you may need to do a code change to append the .js extension yourself:</p>

<pre><code>require.toUrl('some/value') + '.js'
</code></pre>

<p>The text plugin has been updated to also work with this change, so if you want to generate non-extension paths for text resources, be sure to upgrade to the <a href="https://raw.github.com/requirejs/text/latest/text.js">2.0.4 version of text.js</a>.</p>

<p>Normal use of toUrl with a value that has an extension continues to work the same.</p>

<p>Full list of changes:</p>

<ul>
<li><a href="https://github.com/jrburke/requirejs/issues?milestone=24&amp;sort=created&amp;direction=desc&amp;state=closed">Fixed require.js issues</a></li>
<li><a href="https://github.com/jrburke/r.js/issues?sort=created&amp;direction=desc&amp;state=closed&amp;page=1&amp;milestone=21">Fixed r.js optimizer issues</a></li>
</ul>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[RequireJS 2.1.2 Released]]></title>
        <link href="http://jrburke.com/2012/11/21/requirejs-2.1.2-released/"/>
        <updated>2012-11-21T23:11:02.650Z</updated>
        <id>http://jrburke.com/2012/11/21/requirejs-2.1.2-released/</id>
        <content type="html"><![CDATA[<p><a href="http://www.requirejs.org/docs/download.html">RequireJS 2.1.2 is available</a>.</p>

<p>The big changes for this release are in the optimizer:</p>

<ul>
<li>The optimizer can now <a href="http://www.requirejs.org/docs/optimization.html#requirements">run in the browser</a>, to enable web-based custom builds of your library.</li>
<li>"uglify2" is an allowed "optimize" value now, using UglifyJS 2.1.11.</li>
<li>Experimental support for <a href="http://www.requirejs.org/docs/optimization.html#sourcemaps">source maps</a>.</li>
<li>The optimizer runs faster now, and has some <a href="http://www.requirejs.org/docs/optimization.html#turbo">speed options</a>.</li>
</ul>

<p>Full list of changes:</p>

<ul>
<li><a href="https://github.com/jrburke/requirejs/issues?milestone=22&amp;sort=created&amp;direction=desc&amp;state=closed">Fixed require.js issues</a></li>
<li><a href="https://github.com/jrburke/r.js/issues?sort=created&amp;direction=desc&amp;state=closed&amp;page=1&amp;milestone=20">Fixed r.js optimizer issues</a></li>
</ul>]]></content>
    </entry>
    <entry>
        <title type="html"><![CDATA[RequireJS 2.1.1 Released]]></title>
        <link href="http://jrburke.com/2012/10/14/requirejs-2.1.1-released/"/>
        <updated>2012-10-15T05:27:42.805Z</updated>
        <id>http://jrburke.com/2012/10/14/requirejs-2.1.1-released/</id>
        <content type="html"><![CDATA[<p><a href="http://www.requirejs.org/docs/download.html">RequireJS 2.1.1 is available</a>.</p>

<p>The main fix: enabling synchronous calls to requirejs to complete synchronously in Node. More info about the require behavior in 2.1 in <a href="https://github.com/jrburke/requirejs/wiki/Upgrading-to-RequireJS-2.1#wiki-breaking-async">this section of the 2.1 upgrade doc</a>.</p>

<p>Complete list of changes:</p>

<ul>
<li><a href="https://github.com/jrburke/requirejs/issues?milestone=21&amp;sort=created&amp;direction=desc&amp;state=closed">Fixed require.js issues</a></li>
<li><a href="https://github.com/jrburke/r.js/issues?sort=created&amp;direction=desc&amp;state=closed&amp;page=1&amp;milestone=19">Fixed r.js optimizer issues</a></li>
</ul>]]></content>
    </entry>

</feed>
